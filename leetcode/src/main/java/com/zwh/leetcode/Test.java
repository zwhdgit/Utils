package com.zwh.leetcode;

import android.util.Log;

import java.util.ArrayList;
import java.util.List;

public class Test {
    public static void main(String[] args) {
        double[] nums = new double[]{-1.2404032434555796, -3.4164015659358613, -5.99757463390476, -6.676840870502289, -5.824740083977862, -4.856809668773464, -4.386046061651843, -4.782081082986039, -3.918749776107076, -3.8398047568435967, -7.424291598759319, -8.05365119727828, -8.361704279015555, -5.015147153724479, -4.023630200558288, -4.592341408189835, -7.4381380208219365, 1.5368149510551428, 3.484565900696439, 2.7452138519366738, -3.4648233819511254, -3.710660454296523, 2.8347839867915896, 1.8964704204639153, 1.8964704204639153, 2.482780664718807, 2.99203929085866,
                2.9838396960401607, 2.781564244723097, 2.7478902700302115, -3.407066037482198, 2.845136032204444,
                1.682914083349303, 2.5470766327034156, 3.8709429760622647, 4.049728271411012, 5.0623116163830915,
                4.928914778855159, 6.17509496206555, 6.286373952211323, 5.013192701159608, 3.6346113447912898, 2.9657207895612396,
                2.9838396960401607, 3.7343540590090156, 3.527889036358208, 2.6135417084271357, -2.5489998595161745, -2.934995679446002,
                -2.72999998770354, -1.942421170062597, -0.8658521870520658, -0.9153687688190097, -0.7539230502929938,
                -1.7002941017438502, -2.682927611185962, -2.8485785771105463, -3.005927587656004, -2.5757716679995037,
                -1.665352764390927, -1.1734138049541007, -1.4865732880562361, -2.3645084946226307, -4.558069455577135,
                -6.761072472815686, -9.481060221815254, -13.543326470794804, -17.522246253535283, -17.925877863244768,
                -11.438308437104839, 5.116229111707795, 27.061133229054267, 55.63824456084591, 78.05266651434786,
                97.69394772387386, 104.39159205696357, 95.24775464873174, 59.88388422475408, -12.841327373784344,
                -67.9719108460436, -120.8307264445803, -156.03870713704342, -178.3242361630213, -170.8299593162745,
                -137.56866893255528, -94.28732475457663, -18.294122738131296, 46.19936523001425, 95.95804950927776,
                134.67443382097434, 157.5467378569769, 161.90899136358982, 147.51652449810496, 116.62766275095287,
                72.36825313975736, 21.167101197275528, -39.533084196578315, -101.52290574360546, -123.14033058110978,
                -121.81303713324367, -95.55997584959405, -59.78889457133741, -20.22382235688042, 22.848433279336955,
                52.462886807604285, 71.64150251643596, 81.81134811068388, 77.98028471791764, 54.47951969691225,
                5.745546357658082, -23.61439364883934, -47.348362502209355, -62.20357636108534, -63.52093881523438,
                -63.222712122503886, -62.499845702934536, -55.311074310722354, -37.70141547098232, -15.95032610425352,
                34.92607112653723, 72.11773549854085, 89.17522197810192, 100.18063763148047, 103.88785081459237,
                92.55678155867348, 66.57018368210163, 28.905338879221883, -15.091616777955112};
        double[] ds = new double[]{-6.676840870502289, -4.386046061651843, -4.782081082986039, -3.8398047568435967, -8.361704279015555, -4.023630200558288, -7.4381380208219365, 3.484565900696439, -3.710660454296523, 2.8347839867915896, 1.8964704204639153, 2.99203929085866, -3.407066037482198, 2.845136032204444, 1.682914083349303, 5.0623116163830915, 4.928914778855159, 6.286373952211323, 2.9657207895612396, 3.7343540590090156, -2.934995679446002, -0.8658521870520658, -0.9153687688190097, -0.7539230502929938, -3.005927587656004, -1.1734138049541007, -17.925877863244768, 104.39159205696357, -178.3242361630213, 161.90899136358982, -123.14033058110978, 81.81134811068388, -63.52093881523438, 103.88785081459237};
        ArrayList<Double> doubles = 统计数组中峰和谷的数量_2210.countHillValley2(nums);
        judgeRiskDrive(nums);

//        for (int i = 0; i < doubles.size(); i++) {
//            Double aDouble = doubles.get(i);
//            double d = ds[i];
//            if (aDouble != d) {
//                System.out.println(aDouble + "!=" + d);
//            }
//        }
//        System.out.println("执行完毕");

    }

    public static void judgeRiskDrive(double[] ang_res) {
        long sta = System.currentTimeMillis();
        // 去除相邻重复元素
        ArrayList<Double> filterAngs = new ArrayList<>();
        for (Double integer : ang_res) {
            if (filterAngs.size() == 0) {
                filterAngs.add(integer);
                continue;
            }
            if (!integer.equals(filterAngs.get(filterAngs.size() - 1))) {
                filterAngs.add(integer);
            }
        }
//        Log.e(TAG + "judgeRiskDrive", "filterAngs: " + filterAngs.toString());

        // 取峰值（极大，极小值）
        ArrayList<Double> peakValues = new ArrayList<>();
        for (int i = 1; i < filterAngs.size() - 1; i++) {
            Double cur = filterAngs.get(i);
            Double last = filterAngs.get(i - 1);
            Double next = filterAngs.get(i + 1);
            if (cur > last) {
                if (cur > next) {
                    peakValues.add(cur);
                }
            } else {
                if (cur < next) {
                    peakValues.add(cur);
                }
            }
        }
        System.out.println("judgeRiskDrive执行耗时 " + (System.currentTimeMillis() - sta));
    }

}
